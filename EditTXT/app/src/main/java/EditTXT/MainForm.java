/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package EditTXT;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author NATANGABRIELWILDNERD
 */
public class MainForm extends javax.swing.JFrame {

	/**
	 * Creates new form MainForm
	 */
	public ArrayList<File> files = new ArrayList();

	public MainForm() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNameFile = new javax.swing.JLabel();
        lblNameFile1 = new javax.swing.JLabel();
        jTabbedPane = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuAbrir = new javax.swing.JMenuItem();
        menuSalvar = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(400, 273));

        jPanel1.setBackground(new java.awt.Color(221, 221, 221));

        lblNameFile.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblNameFile.setForeground(new java.awt.Color(0, 0, 0));
        lblNameFile.setText("Nome do Arquivo:");

        lblNameFile1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jTabbedPane.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTabbedPaneKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNameFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNameFile1)
                        .addGap(0, 254, Short.MAX_VALUE))
                    .addComponent(jTabbedPane))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNameFile)
                    .addComponent(lblNameFile1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuBar1.setBackground(new java.awt.Color(221, 221, 221));

        jMenu1.setText("File");

        menuAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuAbrir.setText("Open");
        menuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(menuAbrir);

        menuSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuSalvar.setText("Save");
        menuSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalvarActionPerformed(evt);
            }
        });
        jMenu1.add(menuSalvar);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Close ");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalvarActionPerformed
		// TODO add your handling code here:
		int indexTabSelection = jTabbedPane.getSelectedIndex();

		if (indexTabSelection != -1) {
			File arquivo = files.get(indexTabSelection);

			JFileChooser fileChooser = new JFileChooser(arquivo.getPath());
			fileChooser.setFileFilter(new FileNameExtensionFilter("Somente Arquivos (.*txt)", "txt"));
			fileChooser.setSelectedFile(arquivo);
			int resultado = fileChooser.showSaveDialog(null);

			JScrollPane scrollpane = (JScrollPane) jTabbedPane.getComponentAt(indexTabSelection);
			JTextArea txtarea = (JTextArea) scrollpane.getViewport().getView();

			// Se o usuário escolheu um local para salvar
			if (resultado == JFileChooser.APPROVE_OPTION) {
				// Tentar escrever o conteúdo no arquivo
				try (BufferedWriter bw = new BufferedWriter(new FileWriter(arquivo))) {
					bw.write(txtarea.getText());
					JOptionPane.showMessageDialog(null, "Arquivo salvo com sucesso!");
					files.remove(arquivo);
					jTabbedPane.remove(indexTabSelection);

				} catch (IOException ex) {
					JOptionPane.showMessageDialog(null, "Erro ao salvar o arquivo!", "Erro", JOptionPane.ERROR_MESSAGE);
				}
			}
		}
    }//GEN-LAST:event_menuSalvarActionPerformed

    private void menuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirActionPerformed
		// TODO add your handling code here:
		JFileChooser fileChooser = new JFileChooser(files.isEmpty() ? null : files.getLast().getAbsolutePath());
		fileChooser.setFileFilter(new FileNameExtensionFilter("Somente Arquivos (.*txt)", "txt"));

		int resultado = fileChooser.showOpenDialog(this);

		if (resultado == fileChooser.APPROVE_OPTION) {
			File arquivo = fileChooser.getSelectedFile();
			files.add(arquivo);

			JScrollPane jScrollPane = new JScrollPane();
			JTextArea jTextArea = new JTextArea();

			jTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
				public void keyPressed(java.awt.event.KeyEvent evt) {
					if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
						int index = jTabbedPane.getSelectedIndex();

						files.remove(index);
						jTabbedPane.remove(index);

					}
				}
			});

			jScrollPane.add(jTextArea);
			jScrollPane.setViewportView(jTextArea);

			jTabbedPane.addTab(arquivo.getName(), jScrollPane);

			try (BufferedReader br = new BufferedReader(new FileReader(arquivo))) {
				String linha, conteudo = "";

				while ((linha = br.readLine()) != null) {
					conteudo += linha + "\n";
				}

				jTextArea.setText(conteudo);
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, e.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
			}
		}


    }//GEN-LAST:event_menuAbrirActionPerformed

    private void jTabbedPaneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTabbedPaneKeyPressed
		// TODO add your handling code here:
		if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
			int index = jTabbedPane.getSelectedIndex();
			if (index != -1) {
				files.remove(index);
				jTabbedPane.remove(index);
			} else {
				JOptionPane.showMessageDialog(this, "Nenhuma 'ABA' aberta!", "Aviso", JOptionPane.WARNING_MESSAGE);
			}
		}
    }//GEN-LAST:event_jTabbedPaneKeyPressed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
		// TODO add your handling code here:
		JOptionPane.showMessageDialog(null, "Para fechar, selecione a 'ABA' ou selecione a área de edição de texto e aperte 'DELETE", "Dica", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
		// TODO add your handling code here:
		JOptionPane.showMessageDialog(null, "Para fechar, selecione a 'ABA' ou selecione a área de edição de texto e aperte 'DELETE", "Dica", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenu3MouseClicked

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Windows".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainForm().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JLabel lblNameFile;
    private javax.swing.JLabel lblNameFile1;
    private javax.swing.JMenuItem menuAbrir;
    private javax.swing.JMenuItem menuSalvar;
    // End of variables declaration//GEN-END:variables

}
