/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.example.Pokemon.Storage.System;

import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NATANGABRIELWILDNERD
 */
public class BoxJForm extends javax.swing.JFrame {

	/**
	 * Creates new form BoxJForm
	 */
	public BoxJForm(HomeJForm homeJForm) {
		this.homeJForm = homeJForm;

		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListPokedex = new javax.swing.JList<>();
        lblIdPokedexPokeSelection1 = new javax.swing.JPanel();
        lblNomePokeSelection = new javax.swing.JLabel();
        lblIdPokedexPokeSelection = new javax.swing.JLabel();
        lblNivelPokeSelection = new javax.swing.JLabel();
        lblTypePokeSelection = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(700, 400));

        jListPokedex.setModel(attListaPokemons());
        jListPokedex.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListPokedex.setFixedCellWidth(80);
        jListPokedex.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        jListPokedex.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListPokedexMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListPokedex);

        lblIdPokedexPokeSelection1.setBackground(new java.awt.Color(255, 255, 255));
        lblIdPokedexPokeSelection1.setForeground(new java.awt.Color(255, 255, 255));

        lblNomePokeSelection.setFont(new java.awt.Font("DialogInput", 0, 24)); // NOI18N
        lblNomePokeSelection.setForeground(new java.awt.Color(0, 0, 0));
        lblNomePokeSelection.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNomePokeSelection.setText("Nome");

        lblIdPokedexPokeSelection.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        lblIdPokedexPokeSelection.setForeground(new java.awt.Color(0, 0, 0));
        lblIdPokedexPokeSelection.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblIdPokedexPokeSelection.setText("Id-Pokedex");

        lblNivelPokeSelection.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        lblNivelPokeSelection.setForeground(new java.awt.Color(0, 0, 0));
        lblNivelPokeSelection.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNivelPokeSelection.setText("Nivel");

        lblTypePokeSelection.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        lblTypePokeSelection.setForeground(new java.awt.Color(0, 0, 0));
        lblTypePokeSelection.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTypePokeSelection.setText("Type");

        javax.swing.GroupLayout lblIdPokedexPokeSelection1Layout = new javax.swing.GroupLayout(lblIdPokedexPokeSelection1);
        lblIdPokedexPokeSelection1.setLayout(lblIdPokedexPokeSelection1Layout);
        lblIdPokedexPokeSelection1Layout.setHorizontalGroup(
            lblIdPokedexPokeSelection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblIdPokedexPokeSelection1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lblIdPokedexPokeSelection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNomePokeSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdPokedexPokeSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNivelPokeSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTypePokeSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        lblIdPokedexPokeSelection1Layout.setVerticalGroup(
            lblIdPokedexPokeSelection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblIdPokedexPokeSelection1Layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(lblNomePokeSelection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTypePokeSelection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNivelPokeSelection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblIdPokedexPokeSelection)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIdPokedexPokeSelection1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(210, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(298, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIdPokedexPokeSelection1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListPokedexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListPokedexMouseClicked
        // TODO add your handling code here:
		String nameOfPokemonSelectioned = jListPokedex.getSelectedValue();
		System.out.println("Pokemon selecionado na lista: " + nameOfPokemonSelectioned);
		
		Pokemon pokemonSelectioned = null;
		
		//Vai pegar no arrayList o pokemon certo.
		for(Pokemon p : homeJForm.pokedex.pokemonDisponiveis){
			if(p.getName().equalsIgnoreCase(nameOfPokemonSelectioned)){
				pokemonSelectioned = p;
				System.out.println("Pokemon achado no banco de dados!");
				break;
			}
		}
		
		//Para visualização de dados do pokemon selecionado.
		if(pokemonSelectioned != null){
			lblNomePokeSelection.setText(pokemonSelectioned.getName());
			lblIdPokedexPokeSelection.setText("#" + Integer.toString(pokemonSelectioned.getNumberPokedex()));
			lblTypePokeSelection.setText(pokemonSelectioned.getType());
			lblNivelPokeSelection.setText("Nivel: "+Integer.toString(pokemonSelectioned.getNivel()));
		}
    }//GEN-LAST:event_jListPokedexMouseClicked

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(BoxJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(BoxJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(BoxJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(BoxJForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jListPokedex;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIdPokedexPokeSelection;
    private javax.swing.JPanel lblIdPokedexPokeSelection1;
    private javax.swing.JLabel lblNivelPokeSelection;
    private javax.swing.JLabel lblNomePokeSelection;
    private javax.swing.JLabel lblTypePokeSelection;
    // End of variables declaration//GEN-END:variables

	HomeJForm homeJForm;

	public DefaultListModel<String> attListaPokemons() {
		DefaultListModel<String> listModel = new DefaultListModel<>();
		for (Pokemon p : homeJForm.pokedex.pokemonDisponiveis) {
			listModel.addElement(p.getName());
		}
		return listModel;
	}

}
